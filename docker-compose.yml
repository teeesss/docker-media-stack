version: '3.9'

###################################################
### Check and set any needed variables in .env  ###
###################################################

# Static IPs for each service listed here:
# Docker GW     172.50.0.1
# VPN           172.50.0.2
# Embyserver    172.50.0.3
# Jellyseerr    172.50.0.4
# Sonarr        172.50.0.5
# Radarr        172.50.0.6
# Prowlarr      172.50.0.7
# Unpackerr		172.50.0.8
# Flaresolverr  172.50.0.10
# Portainer     172.50.0.30
# WG-Easy       172.50.0.100

#########################
###### Networks #########
#########################

networks:

  vpnnetwork:
    external: true # Create the network and set to true - if set to false, docker tries to create it
    ipam:
      driver: default
      config:
        - subnet: 172.50.0.0/24  # Set your desired subnet for vpnnetwork
        # docker network create --subnet=172.50.0.0/24 vpnnetwork

#########################
###### Services #########
#########################

services:

  #########################
  ####### PIA VPN #########
  #########################

  vpn:
    image: thrnz/docker-wireguard-pia:latest
    container_name: vpn
    volumes:
      - ./pia:/pia                # Auth Token stored here
      - ./pia-shared:/pia-shared  # Forwaded port stored here (for use by other containers)
    ####################################################
    ### Ports for services required to be behind VPN ###
    ####################################################
    ports:
      - 6789:6789 # NZBGET
      - 8040:8040 # qBittorrent
      - 8191:8191 # FlareSolverr
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    environment:
      - LOC=${PIA_LOCATION}
      - USER=${PIA_USER}
      - PASS=${PIA_PASS}
      - LOCAL_NETWORK=${PIA_LOCAL_NETWORK}
      - ALLOWEDIPS=${PIA_ALLOWEDIPS}
      ###############################################
      ### Port Forwarding Doesn't work on US VPNs ###
      ###############################################
      - PORT_FORWARDING=0
      - PORT_PERSIST=0
      - ROUTE=${PIA_LOCAL_LAN}
      - VPNDNS=${PIA_DNS}       # Enable and set in .env to change from PIA default
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 20s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.2
    restart: always

  #########################
  ####### WireGuard #######
  #########################

  wg-easy:
    image: weejewel/wg-easy:latest
    container_name: wg-easy
    environment:
      - WG_HOST=${WG_HOSTNAME}
      - PASSWORD=${WG_PASSWORD}
    volumes:
      - ./wg-easy:/etc/wireguard
    ports:
      - 51820:51820/udp
      - 51821:51821/tcp
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 30s
      timeout: 3s
      retries: 4
      start_period: 20s
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.100
    restart: unless-stopped

  #########################
  ######### Emby ##########
  #########################

  embyserver:
    image: emby/embyserver:latest
    container_name: embyserver
    environment:
      - UID=${USER_ID}   # Note UID and not PUID
      - GID=${GROUP_ID}  # Note GID and not GUID
      - GIDLIST=100
      - TZ=${TIMEZONE}
    #############################################################################
    ### If you have problems, check read/write permissions on the filesystem: ###
    ########  Example: $ chmod -R 755 /volume1/media-stack/data/media ###########
    #############################################################################
    volumes:
      - ./emby:/config
      - /${MEDIA}:/data/media
    ports:
      - 8096:8096 # Emby
      - 8920:8920 # Emby	 
    depends_on:
      vpn:
        condition: service_healthy
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.3
    restart: always

  #########################
  ##### Jellyseerr ########
  #########################

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    user: ${USER_ID}:${GROUP_ID}	
    dns:
      - 9.9.9.9
      - 1.1.1.1
    environment:
      - LOG_LEVEL=debug
      - TZ=${TIMEZONE}
      - JELLYFIN_TYPE=emby # Added for use with Emby
    volumes:
      - ./jellyseerr:/app/config
    ports:
      - 5055:5055 # JellySeerr
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:5055/api/v1/status"]
      interval: 30s
      retries: 6
      start_period: 1m
    depends_on:
      vpn:
        condition: service_healthy
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.4		
    restart: unless-stopped	

  #########################
  ######## Sonarr #########
  #########################

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sonarr:/config
      - /${DOWNLOAD_ARR}:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8999/sonarr/ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m
    ports:
      - 8999:8999 # Sonarr
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.5	  
    restart: always

  #########################
  ######## Radarr #########
  #########################

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr:/config
      - /${DOWNLOAD_ARR}:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:7878/radarr/ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m
    ports:
      - 7878:7878 # Radarr
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.6	  
    restart: always

  #########################
  ####### Prowlarr ########
  #########################

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./prowlarr:/config
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:9696/prowlarr/ping" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.7
    ports:
      - 9696:9696 # Prowlarr
    restart: always

  #########################
  ##### qBittorrent #######
  #########################

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=${QBIT_WEBUI_PORT}
      - SESSION_PORTRANGEMIN=${QBIT_SESSION_PORTRANGEMIN}
      - SESSION_PORT=${QBIT_SESSION_PORT}
    volumes:
      - ./:/config
      - /${DOWNLOAD_TORRENTS}:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:${QBIT_WEBUI_PORT}", "https://google.com" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m
    depends_on:
      vpn:
        condition: service_healthy
    network_mode: service:vpn		
    restart: always

  #########################
  ######## SABNZB #########
  #########################

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzb
    volumes:
      - ./sabnzbd:/config
      - /${DOWNLOAD_USENET}:/data
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m
    depends_on:
      vpn:
        condition: service_healthy
    network_mode: service:vpn		
    restart: unless-stopped

  #########################
  ##### Flaresolverr ######
  #########################

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.10
    restart: always

  #########################
  ####### Unpackerr #######
  #########################

  unpackerr:
    image: golift/unpackerr:latest
    container_name: unpackerr
    user: ${USER_ID}:${GROUP_ID}	
    volumes:
      - ./unpackerr:/config
      - ${DOWNLOAD_ARR}:/data/
    environment:
      - TZ=${TIMEZONE}
      # General config
      - UN_DEBUG=false
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0644
      - UN_DIR_MODE=0755	  
      # Sonarr Config
      - UN_SONARR_0_URL=${SONARR_URL}
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
      - UN_SONARR_0_PATHS_0=/data/downloads/sonarr-tv
      - UN_SONARR_0_PROTOCOLS=torrent,usenet
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m	  
      # Radarr Config
      - UN_RADARR_0_URL=${RADARR_URL}
      - UN_RADARR_0_API_KEY=${RADARR_API_KEY}
      - UN_RADARR_0_PATHS_0=/data/downloads/radarr-movies
      - UN_RADARR_0_PROTOCOLS=torrent,usenet
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m
      # Folder Config
      - UN_FOLDER_0_PATH=
      - UN_FOLDER_0_EXTRACT_PATH=
      - UN_FOLDER_0_DELETE_AFTER=10m
      - UN_FOLDER_0_DELETE_ORIGINAL=false
      - UN_FOLDER_0_DELETE_FILES=false
      - UN_FOLDER_0_MOVE_BACK=false
      # Web Server Config
      - UN_WEBSERVER_METRICS=true
      - UN_WEBSERVER_LISTEN_ADDR=0.0.0.0:5656
      - UN_WEBSERVER_LOG_FILE=
      - UN_WEBSERVER_LOG_FILES=10
      - UN_WEBSERVER_LOG_FILE_MB=10
      - UN_WEBSERVER_SSL_CERT_FILE=
      - UN_WEBSERVER_SSL_KEY_FILE=
      - UN_WEBSERVER_URLBASE=/
      - UN_WEBSERVER_UPSTREAMS=	  
    security_opt:
      - no-new-privileges:true
    ports:
      - 5656:5656 # Unpackerr
    networks:
      vpnnetwork:
        ipv4_address: 172.50.0.8
    restart: always

  #########################
  ###### Watchtower #######
  #########################

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - health-check
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
